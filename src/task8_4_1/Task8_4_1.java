package task8_4_1;

public class Task8_4_1 {
    public static void main(String[] args) throws InterruptedException {
        System.out.println("""
                Задание:\s
                Модуль 8. Многопоточность. Задание №4:\s
                    1. Расскажите своими словами, что такое семафоры в контексте многопоточности в JAVA?\s

                Решение:\s""");

        System.out.println("""
                Семафоры необходимы, когда нужно ограничить доступ к некоторому общему
                ресурсу. В конструктор этого класса (Semaphore(int permits) или Semaphore(int
                permits, boolean fair)) обязательно передается количество потоков, которому семафор
                будет разрешать одновременно использовать заданный ресурс. Доступ управляется с
                помощью счётчика: изначально значение счётчика равно int permits, когда поток заходит
                в заданный блок кода, то значение счётчика уменьшается на единицу, когда поток его
                покидает, то увеличивается. Если значение счётчика равно нулю, то текущий поток
                блокируется, пока кто-нибудь не выйдет из блока (в качестве примера из жизни с
                permits = 1, можно привести очередь в кабинет в поликлинике: когда пациент покидает
                кабинет, мигает лампа, и заходит следующий пациент).""");
    }
}